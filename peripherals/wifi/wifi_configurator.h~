#ifndef WIFICONFIGURATOR_H
#define WIFICONFIGURATOR_H

#include "core_fileparammanager.h"
#include "core_owner.h"

#include <memory>
#include <string>

// Expected file format:
// - the parsing method allows for the the ssid and psk to be in any order
// -------------------------------------//
// -----other settings-----
//    ssid="<ssid>"
//    psk="<password>"
// -----other settings-----
// -------------------------------------//

class WifiConfigurator final
{
 public:
  enum class Error
  {
    SSID,
      Password
  };

 public:
  class Owner
  {
    OWNER_SPECIAL_MEMBERS(WifiConfigurator);
    // Error messages do not include a new line character at the end
    virtual void handleError(WifiConfigurator*, Error, const std::string& msg) = 0;
  };
  
 public:
  WifiConfigurator(Owner*, std::string file_path); // uses the systemd wpa_supplicant.conf file

  // The cached parameters are cleared before parsing.
  void parseFile();
  
  const std::string& getSSID() { return d_ssid; }
  const std::string& getPassword() { return d_pw; }
  void setSSID(const std::string&);
  void setPassword(const std::string&);
  void restartWifi();
  
 private:
  void ownerHandleError(Error, const std::string& msg);
  bool extractSSID();
  bool extractPassword();
  
 private:
  Owner* d_owner = nullptr;
  
  std::unique_ptr<CORE::FileParamManager> d_file_param_man;
  
  std::string d_ssid;
  std::string d_pw;
};

#endif

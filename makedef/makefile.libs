# BASE_DIR - the relative top most directory of the repository
# INCLUDES - holds internal and third party library paths
# LIBS - holds external library names
# IS_TESTPROG - define this in the makefile of a test program
# TEST_NAME - list of test program names

# When adding a new library:
# - add it before any of the dependent libraries

MAKELIBS=1

ifndef CLEANING

ifndef MAKESETTINGS
      $(error makefile.set must be included before this makefile)
endif

# List the most independent ones last

ifdef USES_LIBCONTROL
      LIBCONTROLPATH = $(BASE_DIR)/control
      INCLUDES += -I$(LIBCONTROLPATH)
      LIBS += -lpthread
      LIBSRC += $(wildcard $(LIBCONTROLPATH)/*.cpp)
      USES_LIBUTILMAPPING=1
      USES_LIBKERN=1
      USES_LIBWIRINGPI=1
endif

ifdef USES_LIBCRC
      LIBCRCPATH = $(BASE_DIR)/coms/rc
      INCLUDES += -I$(LIBCRCPATH)
      LIBS +=
      LIBSRC += $(wildcard $(LIBCRCPATH)/*.cpp)
      USES_LIBKERN=1
      USES_LIBWIRINGPI=1
      USES_LIBUTILMAPPING=1
      USES_LIBUTILFILTERING=1
endif

ifdef USES_LIBJS
      LIBJSPATH = $(BASE_DIR)/drivers/joystick
      INCLUDES += -I$(LIBJSPATH)
      LIBS += -lpthread
      LIBSRC += $(wildcard $(LIBJSPATH)/*.cpp)
      USES_LIBKERN=1
      USES_LIBUTILMAPPING=1
      USES_LIBWIRINGPI=1
endif

ifdef USES_LIBGP
      LIBGPPATH = $(BASE_DIR)/drivers/gopro
      INCLUDES += -I$(LIBGPPATH)
      LIBS += -lpthread
      LIBSRC += $(wildcard $(LIBGPPATH)/*.cpp)
      USES_LIBHTTP=1
      USES_LIBKERN=1
      USES_LIBUDP=1
endif

ifdef USES_LIBWIFI
      LIBWIFIPATH = $(BASE_DIR)/peripherals/wifi
      INCLUDES += -I$(LIBWIFIPATH)
      LIBSRC += $(wildcard $(LIBWIFIPATH)/*.cpp)
      USES_LIBCORE=1
      USES_LIBKERN=1
endif

ifdef USES_LIBWIRINGPI
      LIBWIRINGPIPATH = $(BASE_DIR)/peripherals/wiringpi
      INCLUDES += -I$(LIBWIRINGPIPATH)
      LIBS += -lwiringPi
      LIBSRC += $(wildcard $(LIBWIRINGPIPATH)/*.cpp)
      USES_LIBUTILTHREADING=1      
endif

ifdef USES_LIBUDP
      LIBUDPPATH = $(BASE_DIR)/coms/udp
      INCLUDES += -I$(LIBUDPPATH)
      LIBSRC += $(wildcard $(LIBUDPPATH)/*.cpp)
      USES_LIBKERN=1
endif

ifdef USES_LIBHTTP
      LIBHTTPPATH = $(BASE_DIR)/coms/http
      INCLUDES += -I$(LIBHTTPPATH)
      LIBS += -lcurl
      LIBSRC += $(wildcard $(LIBHTTPPATH)/*.cpp)
      USES_LIBKERN=1
endif

ifdef USES_LIBLED
      LIBLEDPATH = $(BASE_DIR)/drivers/led
      INCLUDES += -I$(LIBLEDPATH)
      LIBS += 
      LIBSRC += $(wildcard $(LIBLEDPATH)/*.cpp)
      USES_LIBKERN=1
endif

ifdef USES_LIBUTILTHREADING
      LIBUTILTHREADINGPATH = $(BASE_DIR)/utils/threading
      INCLUDES += -I$(LIBUTILTHREADINGPATH)
      LIBS += 
      LIBSRC += $(wildcard $(LIBUTILTHREADINGPATH)/*.cpp)
      USES_LIBKERN=1
endif

ifdef USES_LIBKERN
      LIBKERNPATH = $(BASE_DIR)/kern
      INCLUDES += -I$(LIBKERNPATH)
      LIBS += -lboost_system -lboost_date_time -lpthread
      LIBSRC += $(wildcard $(LIBKERNPATH)/*.cpp)
      USES_LIBCORE=1
endif

ifdef USES_LIBCORE
      LIBCOREPATH = $(BASE_DIR)/core
      INCLUDES += -I$(LIBCOREPATH)
      LIBSRC += $(wildcard $(LIBCOREPATH)/*.cpp)
endif

ifdef USES_LIBUTILFILTERING
      LIBUTILFILTERINGPATH = $(BASE_DIR)/utils/filtering
      INCLUDES += -I$(LIBUTILFILTERINGPATH)
      LIBS += 
      LIBSRC += $(wildcard $(LIBUTILFILTERINGPATH)/*.cpp)
endif

ifdef USES_LIBUTILMAPPING
      LIBUTILMAPPINGPATH = $(BASE_DIR)/utils/mapping
      INCLUDES += -I$(LIBUTILMAPPINGPATH)
      LIBS += 
      LIBSRC += $(wildcard $(LIBUTILMAPPINGPATH)/*.cpp)
endif

OBJ+=$(LIBSRC:.cpp=.o)

.PHONY: thisdir $(TEST_NAME)

ifndef built_libs
built_libs:=
endif

makelibs:
# make prerequisite libraries
# List the most independent ones first: this ensures that the most independent libraries are marked as built for any further dependent libraries.

ifdef USES_LIBUTILMAPPING
ifndef BUILT_UTILMAPPING
	$(eval built_libs+=BUILT_UTILMAPPING=1)
	$(MAKE) -C $(LIBUTILMAPPINGPATH) $(built_libs)
endif
endif

ifdef USES_LIBUTILFILTERING
ifndef BUILT_UTILFILTERING
	$(eval built_libs+=BUILT_UTILFILTERING=1)
	$(MAKE) -C $(LIBUTILFILTERINGPATH) $(built_libs)
endif
endif

ifdef USES_LIBCORE
ifndef BUILT_CORE
	$(eval built_libs+=BUILT_CORE=1)
	$(MAKE) -C $(LIBCOREPATH) $(built_libs)
endif
endif

ifdef USES_LIBKERN
ifndef BUILT_KERN
	$(eval built_libs+=BUILT_KERN=1)
	$(MAKE) -C $(LIBKERNPATH) $(built_libs)
endif
endif

ifdef USES_LIBUTILTHREADING
ifndef BUILT_UTILTHREADING
	$(eval built_libs+=BUILT_UTILTHREADING=1)
	$(MAKE) -C $(LIBUTILTHREADINGPATH) $(built_libs)
endif
endif

ifdef USES_LIBLED
ifndef BUILT_LED
	$(eval built_libs+=BUILT_LED=1)
	$(MAKE) -C $(LIBLEDPATH) $(built_libs)
endif
endif

ifdef USES_LIBJS
ifndef BUILT_DJS
	$(eval built_libs+=BUILT_DJS=1)
	$(MAKE) -C $(LIBJSPATH) $(built_libs)
endif
endif

ifdef USES_LIBHTTP
ifndef BUILT_HTTP
	$(eval built_libs+=BUILT_HTTP=1)
	$(MAKE) -C $(LIBHTTPPATH) $(built_libs)
endif
endif

ifdef USES_LIBUDP
ifndef BUILT_UDP
	$(eval built_libs+=BUILT_UDP=1)
	$(MAKE) -C $(LIBUDPPATH) $(built_libs)
endif
endif

ifdef USES_LIBWIRINGPI
ifndef BUILT_WIRINGPI
	$(eval built_libs+=BUILT_WIRINGPI=1)
	$(MAKE) -C $(LIBWIRINGPIPATH) $(built_libs)
endif
endif

ifdef USES_LIBWIFI
ifndef BUILT_WIFI
	$(eval built_libs+=BUILT_WIFI=1)
	$(MAKE) -C $(LIBWIFIPATH) $(built_libs)
endif
endif

ifdef USES_LIBGP
ifndef BUILT_DGP
	$(eval built_libs+=BUILT_DGP=1)
	$(MAKE) -C $(LIBGPPATH) $(built_libs)
endif
endif

ifdef USES_LIBCRC
ifndef BUILT_CRC
	$(eval built_libs+=BUILT_CRC=1)
	$(MAKE) -C $(LIBCRCPATH) $(built_libs)
endif
endif

ifdef USES_LIBCONTROL
ifndef BUILT_CONTROL
	$(eval built_libs+=BUILT_CONTROL=1)
	$(MAKE) -C $(LIBCONTROLPATH) $(built_libs)
endif
endif
	$(MAKE) thisdir


ifndef IS_TESTPROG
thisdir: $(OBJ) 
else ifndef TEST_NAME
$(error please define the test program name by TEST_NAME=<name> in the makefile of the test program)
else
thisdir: $(OBJ)
	 $(MAKE) $(TEST_NAME)

$(TEST_NAME):
	 $(CXX) $(CXXFLAGS) $(INCLUDES) $(OBJ) $(LIBS) -o $@
endif

endif # of ifndef CLEANING